{"version":3,"sources":["../src/index.ts"],"names":["S3Database","constructor","config","options","logger","Error","Object","assign","store","bucket","keyPrefix","endpoint","region","accessKeyId","secretAccessKey","sessionToken","acl","configKeyPrefix","_localData","debug","JSON","stringify","s3","S3","s3ForcePathStyle","getSecret","Promise","resolve","_getData","secret","setSecret","_sync","add","name","callback","then","data","list","indexOf","push","trace","err","search","onPackage","onEnd","storage","storageInfoMap","map","_fetchPackageInfo","bind","l","length","all","packageName","headObject","Bucket","Key","response","LastModified","path","time","getTime","remove","get","error","pkgName","splice","reject","putObject","Body","ACL","getPackageStorage","S3PackageManager","getObject","s3Err","message","body","toString","parse","saveToken","token","warn","deleteToken","user","tokenKey","readTokens","filter"],"mappings":"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","sourcesContent":["import {\n  LocalStorage,\n  Logger,\n  Config,\n  Callback,\n  IPluginStorage,\n  PluginOptions,\n  Token,\n  TokenFilter,\n} from '@verdaccio/types';\nimport { getInternalError, VerdaccioError, getServiceUnavailable } from '@verdaccio/commons-api';\nimport { S3 } from 'aws-sdk';\n\nimport { S3Config } from './config';\nimport S3PackageManager from './s3PackageManager';\nimport { convertS3Error, is404Error } from './s3Errors';\nimport addTrailingSlash from './addTrailingSlash';\nimport setConfigValue from './setConfigValue';\n\nexport default class S3Database implements IPluginStorage<S3Config> {\n  public logger: Logger;\n  public config: S3Config;\n  private s3: S3;\n  private _localData: LocalStorage | null;\n\n  public constructor(config: Config, options: PluginOptions<S3Config>) {\n    this.logger = options.logger;\n    // copy so we don't mutate\n    if (!config) {\n      throw new Error('s3 storage missing config. Add `store.s3-storage` to your config file');\n    }\n    this.config = Object.assign(config, config.store['aws-s3-storage']);\n\n    if (!this.config.bucket) {\n      throw new Error('s3 storage requires a bucket');\n    }\n\n    this.config.bucket = setConfigValue(this.config.bucket);\n    this.config.keyPrefix = setConfigValue(this.config.keyPrefix);\n    this.config.endpoint = setConfigValue(this.config.endpoint);\n    this.config.region = setConfigValue(this.config.region);\n    this.config.accessKeyId = setConfigValue(this.config.accessKeyId);\n    this.config.secretAccessKey = setConfigValue(this.config.secretAccessKey);\n    this.config.sessionToken = setConfigValue(this.config.sessionToken);\n    this.config.acl = setConfigValue(this.config.acl);\n\n    const configKeyPrefix = this.config.keyPrefix;\n    this._localData = null;\n    this.config.keyPrefix = addTrailingSlash(configKeyPrefix);\n\n    this.logger.debug({ config: JSON.stringify(this.config, null, 4) }, 's3: configuration: @{config}');\n\n    this.s3 = new S3({\n      endpoint: this.config.endpoint,\n      region: this.config.region,\n      s3ForcePathStyle: this.config.s3ForcePathStyle,\n      accessKeyId: this.config.accessKeyId,\n      secretAccessKey: this.config.secretAccessKey,\n      sessionToken: this.config.sessionToken,\n    });\n  }\n\n  public async getSecret(): Promise<string> {\n    return Promise.resolve((await this._getData()).secret);\n  }\n\n  public async setSecret(secret: string): Promise<void> {\n    (await this._getData()).secret = secret;\n    await this._sync();\n  }\n\n  public add(name: string, callback: Callback): void {\n    this.logger.debug({ name }, 's3: [add] private package @{name}');\n    this._getData().then(async data => {\n      if (data.list.indexOf(name) === -1) {\n        data.list.push(name);\n        this.logger.trace({ name }, 's3: [add] @{name} has been added');\n        try {\n          await this._sync();\n          callback(null);\n        } catch (err) {\n          callback(err);\n        }\n      } else {\n        callback(null);\n      }\n    });\n  }\n\n  public async search(onPackage: Function, onEnd: Function): Promise<void> {\n    this.logger.debug('s3: [search]');\n    const storage = await this._getData();\n    const storageInfoMap = storage.list.map(this._fetchPackageInfo.bind(this, onPackage));\n    this.logger.debug({ l: storageInfoMap.length }, 's3: [search] storageInfoMap length is @{l}');\n    await Promise.all(storageInfoMap);\n    onEnd();\n  }\n\n  private async _fetchPackageInfo(onPackage: Function, packageName: string): Promise<void> {\n    const { bucket, keyPrefix } = this.config;\n    this.logger.debug({ packageName }, 's3: [_fetchPackageInfo] @{packageName}');\n    this.logger.trace({ keyPrefix, bucket }, 's3: [_fetchPackageInfo] bucket: @{bucket} prefix: @{keyPrefix}');\n    return new Promise((resolve): void => {\n      this.s3.headObject(\n        {\n          Bucket: bucket,\n          Key: `${keyPrefix + packageName}/package.json`,\n        },\n        (err, response) => {\n          if (err) {\n            this.logger.debug({ err }, 's3: [_fetchPackageInfo] error: @{err}');\n            return resolve();\n          }\n          if (response.LastModified) {\n            const { LastModified } = response;\n            this.logger.trace({ LastModified }, 's3: [_fetchPackageInfo] LastModified: @{LastModified}');\n            return onPackage(\n              {\n                name: packageName,\n                path: packageName,\n                time: LastModified.getTime(),\n              },\n              resolve\n            );\n          }\n          resolve();\n        }\n      );\n    });\n  }\n\n  public remove(name: string, callback: Callback): void {\n    this.logger.debug({ name }, 's3: [remove] @{name}');\n    this.get(async (err, data) => {\n      if (err) {\n        this.logger.error({ err }, 's3: [remove] error: @{err}');\n        callback(getInternalError('something went wrong on remove a package'));\n      }\n\n      const pkgName = data.indexOf(name);\n      if (pkgName !== -1) {\n        const data = await this._getData();\n        data.list.splice(pkgName, 1);\n        this.logger.debug({ pkgName }, 's3: [remove] sucessfully removed @{pkgName}');\n      }\n\n      try {\n        this.logger.trace('s3: [remove] starting sync');\n        await this._sync();\n        this.logger.trace('s3: [remove] finish sync');\n        callback(null);\n      } catch (err) {\n        this.logger.error({ err }, 's3: [remove] sync error: @{err}');\n        callback(err);\n      }\n    });\n  }\n\n  public get(callback: Callback): void {\n    this.logger.debug('s3: [get]');\n    this._getData().then(data => callback(null, data.list));\n  }\n\n  // Create/write database file to s3\n  private async _sync(): Promise<void> {\n    await new Promise((resolve, reject): void => {\n      const { bucket, keyPrefix } = this.config;\n      this.logger.debug({ keyPrefix, bucket }, 's3: [_sync] bucket: @{bucket} prefix: @{keyPrefix}');\n      this.s3.putObject(\n        {\n          Bucket: this.config.bucket,\n          Key: `${this.config.keyPrefix}verdaccio-s3-db.json`,\n          Body: JSON.stringify(this._localData),\n          ACL: this.config.acl,\n        },\n        err => {\n          if (err) {\n            this.logger.error({ err }, 's3: [_sync] error: @{err}');\n            reject(err);\n            return;\n          }\n          this.logger.debug('s3: [_sync] sucess');\n          resolve();\n        }\n      );\n    });\n  }\n\n  // returns an instance of a class managing the storage for a single package\n  public getPackageStorage(packageName: string): S3PackageManager {\n    this.logger.debug({ packageName }, 's3: [getPackageStorage] @{packageName}');\n\n    return new S3PackageManager(this.config, packageName, this.logger);\n  }\n\n  private async _getData(): Promise<LocalStorage> {\n    if (!this._localData) {\n      this._localData = await new Promise((resolve, reject): void => {\n        const { bucket, keyPrefix } = this.config;\n        this.logger.debug({ keyPrefix, bucket }, 's3: [_getData] bucket: @{bucket} prefix: @{keyPrefix}');\n        this.logger.trace('s3: [_getData] get database object');\n        this.s3.getObject(\n          {\n            Bucket: bucket,\n            Key: `${keyPrefix}verdaccio-s3-db.json`,\n          },\n          (err, response) => {\n            if (err) {\n              const s3Err: VerdaccioError = convertS3Error(err);\n              this.logger.error({ err: s3Err.message }, 's3: [_getData] err: @{err}');\n              if (is404Error(s3Err)) {\n                this.logger.error('s3: [_getData] err 404 create new database');\n                resolve({ list: [], secret: '' });\n              } else {\n                reject(err);\n              }\n              return;\n            }\n\n            const body = response.Body ? response.Body.toString() : '';\n            const data = JSON.parse(body);\n            this.logger.trace({ body }, 's3: [_getData] get data @{body}');\n            resolve(data);\n          }\n        );\n      });\n    } else {\n      this.logger.trace('s3: [_getData] already exist');\n    }\n\n    return this._localData as LocalStorage;\n  }\n\n  public saveToken(token: Token): Promise<void> {\n    this.logger.warn({ token }, 'save token has not been implemented yet @{token}');\n\n    return Promise.reject(getServiceUnavailable('[saveToken] method not implemented'));\n  }\n\n  public deleteToken(user: string, tokenKey: string): Promise<void> {\n    this.logger.warn({ tokenKey, user }, 'delete token has not been implemented yet @{user}');\n\n    return Promise.reject(getServiceUnavailable('[deleteToken] method not implemented'));\n  }\n\n  public readTokens(filter: TokenFilter): Promise<Token[]> {\n    this.logger.warn({ filter }, 'read tokens has not been implemented yet @{filter}');\n\n    return Promise.reject(getServiceUnavailable('[readTokens] method not implemented'));\n  }\n}\n"],"file":"index.js"}